{"ast":null,"code":"var _jsxFileName = \"/home/richie/code-challenges/phase-2/Bot-Battlr/code-challenge/src/components/BotsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BotsPage() {\n  _s();\n  //start here with your code for step one\n  const [bots, setBots] = useState([]);\n  const [botsArmy, setBotsArmy] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8002/bots\").then(res => res.json()).then(data => {\n      setBots(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(YourBotArmy, {\n      botsArmy: botsArmy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BotCollection, {\n      bots: bots,\n      botsArmy: botsArmy,\n      setBotsArmy: setBotsArmy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(BotsPage, \"0ySnOGheJ+f9tqaP0+V+D+t/GnY=\");\n_c = BotsPage;\nexport default BotsPage;\nvar _c;\n$RefreshReg$(_c, \"BotsPage\");","map":{"version":3,"names":["React","useState","useEffect","YourBotArmy","BotCollection","jsxDEV","_jsxDEV","BotsPage","_s","bots","setBots","botsArmy","setBotsArmy","fetch","then","res","json","data","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/richie/code-challenges/phase-2/Bot-Battlr/code-challenge/src/components/BotsPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\n\nfunction BotsPage() {\n  //start here with your code for step one\n  const [bots, setBots]= useState([])\n  const [botsArmy, setBotsArmy]= useState([])\n\n  useEffect(()=>{\n    fetch(\"http://localhost:8002/bots\")\n    .then (res=> res.json())\n    .then ((data)=> {setBots(data)})\n  },[])\n\n  return (\n    <div>\n      <YourBotArmy botsArmy={botsArmy}/>\n      <BotCollection bots={bots} botsArmy={botsArmy} setBotsArmy={setBotsArmy}/>\n    </div>\n  )\n}\n\nexport default BotsPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAET,QAAQ,CAAC,EAAE,CAAC;EACnC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAEX,QAAQ,CAAC,EAAE,CAAC;EAE3CC,SAAS,CAAC,MAAI;IACZW,KAAK,CAAC,4BAA4B,CAAC,CAClCC,IAAI,CAAEC,GAAG,IAAGA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAAGG,IAAI,IAAI;MAACP,OAAO,CAACO,IAAI,CAAC;IAAA,CAAC,CAAC;EAClC,CAAC,EAAC,EAAE,CAAC;EAEL,oBACEX,OAAA;IAAAY,QAAA,gBACEZ,OAAA,CAACH,WAAW;MAACQ,QAAQ,EAAEA;IAAS;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAClChB,OAAA,CAACF,aAAa;MAACK,IAAI,EAAEA,IAAK;MAACE,QAAQ,EAAEA,QAAS;MAACC,WAAW,EAAEA;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvE,CAAC;AAEV;AAACd,EAAA,CAjBQD,QAAQ;AAAAgB,EAAA,GAARhB,QAAQ;AAmBjB,eAAeA,QAAQ;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}